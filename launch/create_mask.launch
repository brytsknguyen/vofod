<launch>

  <arg name="simulation" default="$(eval env('RUN_TYPE') == 'simulation')" />

  <arg name="uav_name" default="$(optenv UAV_NAME uav)"/>
  <arg name="respawn" default="false" />
  <arg name="use_opencv" default="false" />
  <arg name="mask_filename" default="mask.png" />

  <arg name="rosbag_remap" default="false" />
  <arg unless="$(arg rosbag_remap)" name="suf" value=""/>
  <arg     if="$(arg rosbag_remap)" name="suf" value="_"/>

  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch"/>

  <arg name="profile" default="false" />
  <arg unless="$(arg profile)" name="launch_prefix_profile" value=""/>
  <arg     if="$(arg profile)" name="launch_prefix_profile" value="valgrind --tool=callgrind --callgrind-out-file='callgrind.out.%p'"/>

  <!-- nodelet-related arguments -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="detection_nodelet_manager" />
  <arg name="det_nodelet" value="vofod/MaskCreator" />
  <arg unless="$(arg standalone)" name="nodelet_load" value="load $(arg det_nodelet) $(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_load" value="standalone $(arg det_nodelet)"/>

  <arg name="sensor_config_filename" default="$(find vofod)/config/sensor_os1-128.yaml" />

  <group ns="$(arg uav_name)">

    <node pkg="nodelet" type="nodelet" name="mask_creation" args="$(arg nodelet_load)" output="screen" launch-prefix="$(arg launch_prefix) $(arg launch_prefix_profile)" respawn="$(arg respawn)" >
      
      <param name="sensor/simulation" value="$(arg simulation)" />
      <rosparam file="$(arg sensor_config_filename)" />

      <param name="use_opencv" value="$(arg use_opencv)" />
      <param name="uav_name" value="$(arg uav_name)" />
      <param name="mask_filename" value="$(arg mask_filename)" />

      <!-- Subscribers -->
      <remap from="~pointcloud" to="os_cloud_nodelet/points" />

      <!-- Publishers -->
      <remap from="~mask" to="~mask$(arg suf)" />

      <!-- Services -->
      <remap from="~reset" to="~reset" />
      <remap from="~get_metadata" to="os_nodelet/get_metadata" />

    </node>
  
  </group>

</launch>

